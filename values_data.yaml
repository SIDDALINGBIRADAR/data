# values-openshift.yaml

# Use Apache Airflow image (official) â€“ ensure it supports arbitrary UID
images:
  airflow:
    repository: apache/airflow
    tag: 3.0.2
    pullPolicy: IfNotPresent

# Default UID/GID to match OpenShift project range
uid: 1001960000
gid: 1001960000

# Global security context (new format)
securityContexts:
  pod:
    runAsUser: 1001960000
    runAsGroup: 1001960000
    fsGroup: 1001960000
  containers:
    runAsUser: 1001960000
    runAsGroup: 1001960000

# Assign custom service account
serviceAccount:
  create: true
  name: airflow-sa
  annotations: {}

# Apply to all components
webserver:
  serviceAccountName: airflow-sa
  securityContexts:
    pod:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containers:
      runAsUser: 1001960000
      runAsGroup: 1001960000

scheduler:
  serviceAccountName: airflow-sa
  securityContexts:
    pod:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containers:
      runAsUser: 1001960000
      runAsGroup: 1001960000

workers:
  serviceAccountName: airflow-sa
  securityContexts:
    pod:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containers:
      runAsUser: 1001960000
      runAsGroup: 1001960000

triggerer:
  serviceAccountName: airflow-sa
  securityContexts:
    pod:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containers:
      runAsUser: 1001960000
      runAsGroup: 1001960000

apiServer:
  serviceAccountName: airflow-sa
  securityContexts:
    pod:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containers:
      runAsUser: 1001960000
      runAsGroup: 1001960000

dagProcessor:
  serviceAccountName: airflow-sa
  securityContexts:
    pod:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containers:
      runAsUser: 1001960000
      runAsGroup: 1001960000

# Fix init containers (wait-for-migrations, etc.)
waitForMigrations:
  securityContexts:
    container:
      runAsUser: 1001960000
      runAsGroup: 1001960000

# PostgreSQL (from dependency chart)
postgresql:
  enabled: true
  auth:
    postgresPassword: "supersecretpassword"
    database: airflow
    username: airflow
    password: "airflow-secret"
  primary:
    securityContext:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containerSecurityContext:
      runAsUser: 1001960000
      runAsGroup: 1001960000
  volumePermissions:
    enabled: true  # Ensures volume is writable by our UID

# Redis
redis:
  enabled: true
  auth:
    enabled: true
    password: "redis-secret"
  master:
    securityContext:
      runAsUser: 1001960000
      runAsGroup: 1001960000
      fsGroup: 1001960000
    containerSecurityContext:
      runAsUser: 1001960000
      runAsGroup: 1001960000
  volumePermissions:
    enabled: true

# Prevent seccomp issues
podAnnotations: {}
containerAnnotations: {}

# Optional: Use Helm hooks (disable if using ArgoCD)
useHelmHooks: true